version: '3.8'

services:
  # Backend API Server
  backend:
    build: ./ai_girlfriend_backend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://db:27017/ai_girlfriend
      - JWT_SECRET=your_super_secret_jwt_key_here_change_in_production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - db
      - redis
    volumes:
      - ./ai_girlfriend_backend:/app
      - /app/node_modules
      - backend_uploads:/app/uploads
    networks:
      - ai_girlfriend_network
    restart: unless-stopped

  # MongoDB Database
  db:
    image: mongo:6.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password123
      - MONGO_INITDB_DATABASE=ai_girlfriend
    volumes:
      - mongodb_data:/data/db
      - ./ai_girlfriend_backend/scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - ai_girlfriend_network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ai_girlfriend_network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Frontend User App
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "8080:80"
    depends_on:
      - backend
    networks:
      - ai_girlfriend_network
    restart: unless-stopped

  # Admin Dashboard
  admin:
    build:
      context: ./ai_girlfriend_admin
      dockerfile: Dockerfile
    ports:
      - "8081:80"
    depends_on:
      - backend
    networks:
      - ai_girlfriend_network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
      - admin
    networks:
      - ai_girlfriend_network
    restart: unless-stopped

  # MongoDB Admin Interface (optional)
  mongo-express:
    image: mongo-express:latest
    ports:
      - "8082:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password123
      - ME_CONFIG_MONGODB_URL=mongodb://admin:password123@db:27017/
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin123
    depends_on:
      - db
    networks:
      - ai_girlfriend_network
    restart: unless-stopped

  # Redis Commander (optional)
  redis-commander:
    image: rediscommander/redis-commander:latest
    ports:
      - "8083:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    networks:
      - ai_girlfriend_network
    restart: unless-stopped

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  backend_uploads:
    driver: local

networks:
  ai_girlfriend_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16